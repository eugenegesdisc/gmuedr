# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model_ import Model
from openapi_server import util

from openapi_server.models.any_ofobjectstring import AnyOfobjectstring


class Units(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, label: AnyOfobjectstring = None, symbol: AnyOfobjectstring = None, id: str = None):
        """Units - a model defined in OpenAPI

        :param label: The label of this Units.
        :param symbol: The symbol of this Units.
        :param id: The id of this Units.
        """
        self.openapi_types = {
            'label': AnyOfobjectstring,
            'symbol': AnyOfobjectstring,
            'id': str
        }

        self.attribute_map = {
            'label': 'label',
            'symbol': 'symbol',
            'id': 'id'
        }

        self._label = label
        self._symbol = symbol
        self._id = id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Units':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The units of this Units.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def label(self):
        """Gets the label of this Units.


        :return: The label of this Units.
        :rtype: AnyOfobjectstring
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this Units.


        :param label: The label of this Units.
        :type label: AnyOfobjectstring
        """

        self._label = label

    @property
    def symbol(self):
        """Gets the symbol of this Units.


        :return: The symbol of this Units.
        :rtype: AnyOfobjectstring
        """
        return self._symbol

    @symbol.setter
    def symbol(self, symbol):
        """Sets the symbol of this Units.


        :param symbol: The symbol of this Units.
        :type symbol: AnyOfobjectstring
        """

        self._symbol = symbol

    @property
    def id(self):
        """Gets the id of this Units.


        :return: The id of this Units.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Units.


        :param id: The id of this Units.
        :type id: str
        """

        self._id = id
